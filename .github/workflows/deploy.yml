name: Deploy ðŸš€

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
      - run: dotnet restore ./BookManager/BookManager.csproj
      - run: dotnet build ./BookManager/BookManager.csproj --no-restore --configuration Release
      - run: dotnet test ./BookManager/BookManager.csproj --no-build --verbosity normal

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY%%/* }}
      - name: Build Docker Image
        working-directory: ./BookManager
        run: |
          IMAGE_URI=${{ secrets.REPOSITORY }}:latest
          dotnet publish -c Release -p:ContainerRepository=${{ secrets.REPOSITORY }} -p:RuntimeIdentifier=linux-x64
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      - name: Push Docker Image to ECR
        run: docker push ${{ env.IMAGE_URI }}

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ./deployments/ecs-task-definition.json
          service: bookmanager
          cluster: bookmanager-cluster
          wait-for-service-stability: true
